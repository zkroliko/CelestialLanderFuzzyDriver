FUNCTION_BLOCK
VAR_INPUT
    predkoscPionowa : REAL;
    wysokosc : REAL;
    pozycjaX : REAL;
    pozycjaY : REAL;
END_VAR

VAR_OUTPUT
    silnikiGlowne : REAL;
    ruchX : Real;
    ruchY : Real;
END_VAR

FUZZIFY pozycjaX
    TERM naWschod := (0, 0) (20,0) (1000, 1) ;
    TERM akceptowalna := (-50, 0) (-25,0.5) (25,0.5) (50, 0) ;
    TERM naZachod := (-1000, 1) (-20, 0) (0,0);
END_FUZZIFY

FUZZIFY pozycjaY
    TERM naPolnoc := (0, 0) (20,0) (100, 1);
    TERM akceptowalna := (-50, 0) (-35,0.5) (0,1) (e5,0.5) (50, 0) ;
    TERM naPoludnie := (-100, 1) (-20, 0) (0,0);
END_FUZZIFY

FUZZIFY predkoscPionowa
    TERM zaSzybko := (5,0) (10,1) (40,1);
    TERM odpowiednia := (0, 0) (0.5, 1) (0.75, 1) (6.5, 0);
    TERM zaWolno := (-5, 1) (0, 1) (2, 0);
END_FUZZIFY

FUZZIFY wysokosc
    TERM wysoko := (500,0) (800,0.1) (1800,0.25) (3800,1);
    TERM nisko := (100,0) (300,1) (850,1) (1000,0.75) (1200,0.5) (1600,0);
    TERM bardzoNisko := (0,0) (10,1) (50,1) (150,0);
END_FUZZIFY

DEFUZZIFY silnikiGlowne
    TERM retrograde := (-2,0) (-1, 1) (-0.5, 1) (0,0) ;
    TERM zostaw := (-0.5, 0) (-0.25,1) (0.25,1) (0.5, 0);
    TERM prograde := (0,0) (1, 0.25) (2, 1) (4, 0);
    METHOD : COG;
    DEFAULT := 0;
END_DEFUZZIFY

DEFUZZIFY ruchX
    TERM naZachod := (-8, 1) (-4, 1) (0, 0);
    TERM zostaw := (-5, 0) (-2.5, 1) (2.5, 1) (5,0);
    TERM naWschod := (0, 0) (4, 1) (8, 1);
    METHOD : COG;
    DEFAULT := 0;
END_DEFUZZIFY

DEFUZZIFY ruchY
    TERM naPolnoc := (0, 0) (4, 1) (8, 1);
    TERM zostaw := (-5, 0) (-2.5, 1) (2.5, 1) (5,0);
    TERM naPoludnie := (-8, 1) (-4, 1) (0, 0);
    METHOD : COG;
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK kontrolaPredkosciPionowej
    AND: MIN;
    ACT: MIN;

    // Warte wspomnienia
    // Jezeli jestesmy juz dosc nisko i lecimy wolno i chcielibysmy sobie dopalic to bierzemy pod uwage czy daleko nam brakuje do LZ
    // Jezeli jestemy juz bardzo nisko i lecimy za szybko LUB! jestesmy daleko od lz to zwalniamy jeszcze troszke

    RULE 0: IF predkoscPionowa IS odpowiednia AND wysokosc IS wysoko THEN silnikiGlowne IS zostaw;
    RULE 1: IF predkoscPionowa IS zaSzybko AND wysokosc IS wysoko THEN silnikiGlowne IS zostaw;
    RULE 2: IF predkoscPionowa IS zaWolno AND wysokosc IS wysoko THEN silnikiGlowne IS prograde;

    RULE 3: IF predkoscPionowa IS odpowiednia AND wysokosc IS nisko  THEN silnikiGlowne IS zostaw;
    RULE 4: IF predkoscPionowa IS zaSzybko AND wysokosc IS nisko THEN silnikiGlowne IS retrograde;
    RULE 5: IF predkoscPionowa IS zaWolno AND wysokosc IS nisko AND pozycjaX IS akceptowalna AND pozycjaY IS akceptowalna THEN silnikiGlowne IS prograde;

    RULE 6: IF predkoscPionowa IS odpowiednia AND wysokosc IS bardzoNisko THEN silnikiGlowne IS zostaw;
    RULE 7: IF (predkoscPionowa IS zaSzybko AND wysokosc IS bardzoNisko) ASUM (pozycjaX IS NOT akceptowalna AND pozycjaY IS NOT akceptowalna) THEN silnikiGlowne IS retrograde;
    RULE 8: IF predkoscPionowa IS zaWolno AND wysokosc IS bardzoNisko THEN silnikiGlowne IS zostaw;

END_RULEBLOCK

RULEBLOCK przemieszczanieWX
    AND: MIN;
    ACT: MIN;

    RULE 0: IF pozycjaX IS akceptowalna THEN ruchX IS zostaw;
    RULE 1: IF pozycjaX IS naZachod THEN ruchX IS naWschod;
    RULE 2: IF pozycjaX IS naWschod THEN ruchX IS naZachod;

END_RULEBLOCK

RULEBLOCK przemieszczanieWY
    AND: MIN;
    ACT: MIN;

    RULE 0: IF pozycjaY IS akceptowalna THEN ruchY IS zostaw;
    RULE 1: IF pozycjaY IS naPolnoc THEN ruchY IS naPoludnie;
    RULE 2: IF pozycjaY IS naPoludnie THEN ruchY IS naPolnoc;

END_RULEBLOCK
END_FUNCTION_BLOCK